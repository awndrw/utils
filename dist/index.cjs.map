{"version":3,"file":"index.cjs","sources":["../src/events/document.ts","../src/events/window.ts","../src/events/element.ts","../src/events/index.ts","../src/noop.ts","../src/throttle.ts"],"sourcesContent":["import { EventListener, EventName, DomEventListener } from './eventTypes';\n\nexport const on = <E extends EventName<DocumentEventMap>>(\n    event: E,\n    listener: EventListener<DocumentEventMap, E>\n) => {\n    document.addEventListener(event, listener as DomEventListener);\n};\n\nexport const off = <E extends EventName<DocumentEventMap>>(\n    event: E,\n    listener: EventListener<DocumentEventMap, E>\n) => {\n    document.removeEventListener(event, listener as DomEventListener);\n};\n\nexport const once = <E extends EventName<DocumentEventMap>>(\n    event: E,\n    listener: EventListener<DocumentEventMap, E>\n) => {\n    const wrappedListener: EventListener<DocumentEventMap, E> = e => {\n        listener(e);\n        off(event, wrappedListener);\n    };\n    on(event, wrappedListener);\n};\n\nexport const trigger = (event: string) => {\n    const customEvent = new CustomEvent(event);\n    document.dispatchEvent(customEvent);\n};\n","import { EventListener, EventName, DomEventListener } from './eventTypes';\n\nexport const on = <E extends EventName<WindowEventMap>>(\n    event: E,\n    listener: EventListener<WindowEventMap, E>\n) => {\n    window.addEventListener(event, listener as DomEventListener);\n};\n\nexport const off = <E extends EventName<WindowEventMap>>(\n    event: E,\n    listener: EventListener<WindowEventMap, E>\n) => {\n    window.removeEventListener(event, listener as DomEventListener);\n};\n\nexport const once = <E extends EventName<WindowEventMap>>(\n    event: E,\n    listener: EventListener<WindowEventMap, E>\n) => {\n    const wrappedListener: EventListener<WindowEventMap, E> = e => {\n        listener(e);\n        off(event, wrappedListener);\n    };\n    on(event, wrappedListener);\n};\n\nexport const trigger = (event: string) => {\n    const customEvent = new CustomEvent(event);\n    window.dispatchEvent(customEvent);\n};\n","import { EventListener, EventName, DomEventListener } from './eventTypes';\n\nexport const on = <E extends EventName<HTMLElementEventMap>>(\n    element: HTMLElement,\n    event: E,\n    listener: EventListener<HTMLElementEventMap, E>\n) => {\n    element.addEventListener(event, listener as DomEventListener);\n};\n\nexport const off = <E extends EventName<HTMLElementEventMap>>(\n    element: HTMLElement,\n    event: E,\n    listener: EventListener<HTMLElementEventMap, E>\n) => {\n    element.removeEventListener(event, listener as DomEventListener);\n};\n\nexport const once = <E extends EventName<HTMLElementEventMap>>(\n    element: HTMLElement,\n    event: E,\n    listener: EventListener<HTMLElementEventMap, E>\n) => {\n    const wrappedListener: EventListener<HTMLElementEventMap, E> = e => {\n        listener(e);\n        off(element, event, wrappedListener);\n    };\n    on(element, event, wrappedListener);\n};\n\nexport const trigger = (element: HTMLElement, event: string) => {\n    const customEvent = new CustomEvent(event);\n    element.dispatchEvent(customEvent);\n};\n","import * as documentEvents from './document';\nimport * as windowEvents from './window';\nimport * as elementEvents from './element';\n\nexport const events = {\n    document: documentEvents,\n    window: windowEvents,\n    element: elementEvents,\n};\n\nexport type { EventListener, EventName } from './eventTypes';\n","export const noop = () => undefined;\n","import { Callback } from './types/Callback';\n\ntype ThrottledFunction<C extends Callback> = (\n    ...args: Parameters<C>\n) => ReturnType<C>;\n\nexport const throttle = <C extends Callback>(\n    callback: C,\n    limit: number\n): ThrottledFunction<C> => {\n    let waiting: boolean;\n    let prev: ReturnType<C>;\n    return (...args: Parameters<C>) => {\n        if (!waiting) {\n            waiting = true;\n            setTimeout(() => (waiting = false), limit);\n            prev = callback.apply(this, args) as ReturnType<C>;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return prev;\n    };\n};\n"],"names":["on","event","listener","document","addEventListener","off","removeEventListener","window","element","wrappedListener","e","customEvent","CustomEvent","dispatchEvent","callback","limit","waiting","prev","setTimeout","apply","slice","call","arguments"],"mappings":"AAEO,IAAMA,EAAK,SACdC,EACAC,GAEAC,SAASC,iBAAiBH,EAAOC,IAGxBG,EAAM,SACfJ,EACAC,GAEAC,SAASG,oBAAoBL,EAAOC,ICX3BF,EAAK,SACdC,EACAC,GAEAK,OAAOH,iBAAiBH,EAAOC,IAGtBG,EAAM,SACfJ,EACAC,GAEAK,OAAOD,oBAAoBL,EAAOC,ICXzBF,EAAK,SACdQ,EACAP,EACAC,GAEAM,EAAQJ,iBAAiBH,EAAOC,IAGvBG,EAAM,SACfG,EACAP,EACAC,GAEAM,EAAQF,oBAAoBL,EAAOC,mBCXjB,CAClBC,yCHWgB,SAChBF,EACAC,GAMAF,EAAGC,EAJyD,SAAtDQ,EAAsDC,GACxDR,EAASQ,GACTL,EAAIJ,EAAOQ,cAKI,SAACR,GACpB,IAAMU,EAAc,IAAIC,YAAYX,GACpCE,SAASU,cAAcF,KGvBvBJ,uCFUgB,SAChBN,EACAC,GAMAF,EAAGC,EAJuD,SAApDQ,EAAoDC,GACtDR,EAASQ,GACTL,EAAIJ,EAAOQ,cAKI,SAACR,GACpB,IAAMU,EAAc,IAAIC,YAAYX,GACpCM,OAAOM,cAAcF,KEtBrBH,wCDWgB,SAChBA,EACAP,EACAC,GAMAF,EAAGQ,EAASP,EAJmD,SAAzDQ,EAAyDC,GAC3DR,EAASQ,GACTL,EAAIG,EAASP,EAAOQ,cAKL,SAACD,EAAsBP,GAC1C,IAAMU,EAAc,IAAIC,YAAYX,GACpCO,EAAQK,cAAcF,mBEhCN,8BCMI,SACpBG,EACAC,GAEA,IAAIC,EACAC,EACJ,OAAO,WAOH,OANKD,IACDA,GAAU,EACVE,WAAW,WAAA,OAAOF,GAAU,GAAQD,GACpCE,EAAOH,EAASK,aACnB,GAAAC,MAAAC,KAAAC,aAEML"}